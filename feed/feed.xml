<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
	<title>Cutreblog</title>
	<subtitle>Blog de Alejandro Montes</subtitle>
	
	<link href="https://reeseschultz.github.io/feed/feed.xml" rel="self"/>
	<link href="https://reeseschultz.github.io"/>
	<updated>2022-11-16T00:00:00Z</updated>
	<id>https://example.com/</id>
	<author> 
		<name>Reese Schultz</name>
	</author>
	
	<entry>
		<title>Interconexión de Servidores de Bases de datos</title>
		<link href="https://reeseschultz.github.io/post/interconexion-de-servidores-de-bases-de-datos/"/>
		<updated>2022-11-16T00:00:00Z</updated>
		<id>https://reeseschultz.github.io/post/interconexion-de-servidores-de-bases-de-datos/</id>
		<content type="html">&lt;h2 id=&quot;1.-realizar-un-enlace-entre-dos-servidores-de-bases-de-datos-oracle%2C-explicando-la-configuraci%C3%B3n-necesaria-en-ambos-extremos-y-demostrando-su-funcionamiento.&quot; tabindex=&quot;-1&quot;&gt;1. Realizar un enlace entre dos servidores de bases de datos ORACLE, explicando la configuración necesaria en ambos extremos y demostrando su funcionamiento.&lt;/h2&gt;
&lt;p&gt;En el escenario, tenemos 2 servidores Oracle, uno creado en mi propio sistema debian y otro en una máquina virtual debian. Ambos se conectan a través de una red virtual. Lo primero que haremos, es crear un usuario en cada servidor con los privilegios suficientes para poder realizar la interconexión.&lt;/p&gt;
&lt;p&gt;El usuario del servidor 1:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://reeseschultz.github.io/img/BD-P2.2.png&quot; alt=&quot;BD-P2.2.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;El usuario del servidor 2:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://reeseschultz.github.io/img/BD-P2.1.png&quot; alt=&quot;BD-P2.1.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;He añadido como ejemplo el esquema SCOTT para poder visualizar algunas tablas. Vamos a configurar el archivo &lt;code&gt;tnsntames.ora&lt;/code&gt;:&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;nano&lt;/span&gt; /opt/oracle/product/19c/dbhome_1/network/admin/tnsnames.ora&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;RCLCDB &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;DESCRIPTION &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;ADDRESS &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;PROTOCOL &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; TCP&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;HOST &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;192.168&lt;/span&gt;.122.97&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;PORT &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1521&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;))&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;CONNECT_DATA &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;SERVER &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; DEDICATED&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;SERVICE_NAME &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; ORCLCDB&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;hr /&gt;
&lt;h2 id=&quot;documento-realizado-por%3A&quot; tabindex=&quot;-1&quot;&gt;&lt;strong&gt;Documento realizado por:&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;✒️ &lt;strong&gt;Alejandro Montes Delgado&lt;/strong&gt; - &lt;em&gt;2º ASIR&lt;/em&gt;&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Compilar un Kernel linux a medida.</title>
		<link href="https://reeseschultz.github.io/post/compilar-un-kernel-linux-a-medida./"/>
		<updated>2022-11-10T00:00:00Z</updated>
		<id>https://reeseschultz.github.io/post/compilar-un-kernel-linux-a-medida./</id>
		<content type="html">&lt;p&gt;Antes que nada, crearemos un directorio de trabajo, donde descargaremos el kérnel y trabajaremos con él.&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;mkdir&lt;/span&gt; ~/kernel&lt;br /&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;cd&lt;/span&gt; ~/kernel&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Instalamos las herramientas de compilación:&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;apt&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; build-essential qtbase5-dev&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Añadimos al &lt;code&gt;sources.list&lt;/code&gt; el repositorio de bullseye-backports y con el siguiente comando podremos ver las versiones disponibles del kernel:&lt;/p&gt;
&lt;pre class=&quot;language-txt&quot;&gt;&lt;code class=&quot;language-txt&quot;&gt;      ~/kernel$ sudo apt policy linux-source&lt;br /&gt;linux-source:&lt;br /&gt;  Instalados: (ninguno)&lt;br /&gt;  Candidato:  5.10.149-2&lt;br /&gt;  Tabla de versión:&lt;br /&gt;     6.0.3-1~bpo11+1 100&lt;br /&gt;        100 http://deb.debian.org/debian bullseye-backports/main amd64 Packages&lt;br /&gt;     5.19.11-1~bpo11+1 100&lt;br /&gt;        100 http://deb.debian.org/debian bullseye-backports/main amd64 Packages&lt;br /&gt;     5.18.16-1~bpo11+1 100&lt;br /&gt;        100 http://deb.debian.org/debian bullseye-backports/main amd64 Packages&lt;br /&gt;     5.10.149-2 500&lt;br /&gt;        500 http://security.debian.org/debian-security bullseye-security/main amd64 Packages&lt;br /&gt;     5.10.140-1 500&lt;br /&gt;        500 http://deb.debian.org/debian bullseye/main amd64 Packages&lt;br /&gt;     5.10.136-1 500&lt;br /&gt;        500 http://security.debian.org/debian-security bullseye-security/main amd64 Packages&lt;br /&gt;     5.10.127-2 500&lt;br /&gt;        500 http://deb.debian.org/debian bullseye/main amd64 Packages&lt;br /&gt;        500 http://security.debian.org/debian-security bullseye-security/main amd64 Packages&lt;br /&gt;     5.10.120-1 500&lt;br /&gt;        500 http://security.debian.org/debian-security bullseye-security/main amd64 Packages&lt;br /&gt;     5.10.113-1 500&lt;br /&gt;        500 http://security.debian.org/debian-security bullseye-security/main amd64 Packages&lt;br /&gt;     5.10.103-1 500&lt;br /&gt;        500 http://security.debian.org/debian-security bullseye-security/main amd64 Packages&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;usaremos la versión del kernel 6.0.3.1. Para descargar el kernel con la versión que vamos a utilizar, usamos el siguiente comando:&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;apt&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; linux-source&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;6.0&lt;/span&gt;.3-1~bpo11+1&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;movemos a nuestro directorio el archivo que se ha descargado. A mí se me ha descargado en &lt;em&gt;/usr/src&lt;/em&gt;:&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;mv&lt;/span&gt; /usr/src/linux-source-6.0.tar.xz ./&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Tenemos que desempaquetarlo, para ello usaremos tar:&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;tar&lt;/span&gt; -xf ./linux-source-6.0.tar.xz&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Como podemos ver, ya tenemos listo el kernel para trabajar con él.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://reeseschultz.github.io/img/ASO-P6.1.png&quot; alt=&quot;ASO-P6.1.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;A la hora de compilar el kernel, necesitamos el archivo .config el cual se van a cargar de forma estática los modulos del kernel. Cogeremos de referencia el &lt;code&gt;.config&lt;/code&gt; de nuestro kernel. Ejecutaremos el siguiente comando para ello:&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;make&lt;/span&gt; oldconfig&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Al ejecutar el make, nos pregunta si queremos incluir componentes adicionales, como la idea es hacer el kernel lo más pequeño posible, le daremos a todo que no. Como podemos ver, en el primer comando muestra los módulos que se han enlazado estáticamente(=y) y el segundo los que se han enlazado dinámicamente(=m).&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://reeseschultz.github.io/img/ASO-P6.2.png&quot; alt=&quot;ASO-P6.2.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Como podemos apreciar son un total de unos 5700 módulos enlazados, para seguir quitando módulos, usaremos el siguiente comando para quitar aquellos que no están activos:&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;make&lt;/span&gt; localmodconfig&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Cuando se ejecuta el comando, vuelve a preguntar si queremos enlazar algun componente, para seguir descartando componentes, le he seguido dando a no. Volvemos a contar cuantos módulos tenemos:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://reeseschultz.github.io/img/ASO-P6.3.png&quot; alt=&quot;ASO-P6.3.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Ahora, ya tenemos menos de 2000 módulos enlazados, sigue siendo una cantidad alta pero hemos reducido a más de la mitad los módulos enlazados.&lt;/p&gt;
&lt;p&gt;Dicho esto, empezaremos nuestra primera compilación, así verificaremos que funciona todo.&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;alemd@debian:~/kernel/linux-source-6.0$ &lt;span class=&quot;token function&quot;&gt;make&lt;/span&gt; -j4 bindeb-pkg&lt;br /&gt;  SYNC    include/config/auto.conf.cmd&lt;br /&gt;  UPD     include/config/kernel.release&lt;br /&gt;&lt;span class=&quot;token function&quot;&gt;sh&lt;/span&gt; ./scripts/package/mkdebian&lt;br /&gt;dpkg-buildpackage -r&lt;span class=&quot;token string&quot;&gt;&quot;fakeroot -u&quot;&lt;/span&gt; -a&lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;cat&lt;/span&gt; debian/arch&lt;span class=&quot;token variable&quot;&gt;)&lt;/span&gt;&lt;/span&gt;  -b -nc -uc&lt;br /&gt;dpkg-buildpackage: información: paquete fuente linux-upstream&lt;br /&gt;dpkg-buildpackage: información: versión de las fuentes &lt;span class=&quot;token number&quot;&gt;6.0&lt;/span&gt;.3-1&lt;br /&gt;dpkg-buildpackage: información: distribución de las fuentes bullseye&lt;br /&gt;dpkg-buildpackage: información: fuentes modificadas por alemd &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;alemd@debian&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;br /&gt;dpkg-buildpackage: información: arquitectura del sistema amd64&lt;br /&gt; dpkg-source --before-build &lt;span class=&quot;token builtin class-name&quot;&gt;.&lt;/span&gt;&lt;br /&gt; debian/rules binary&lt;br /&gt;&lt;span class=&quot;token function&quot;&gt;make&lt;/span&gt; &lt;span class=&quot;token assign-left variable&quot;&gt;KERNELRELEASE&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;6.0&lt;/span&gt;.3 &lt;span class=&quot;token assign-left variable&quot;&gt;ARCH&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;x86 	&lt;span class=&quot;token assign-left variable&quot;&gt;KBUILD_BUILD_VERSION&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt; -f ./Makefile&lt;br /&gt;  SYSHDR  arch/x86/include/generated/uapi/asm/unistd_32.h&lt;br /&gt;  SYSHDR  arch/x86/include/generated/uapi/asm/unistd_64.h&lt;br /&gt;  WRAP    arch/x86/include/generated/uapi/asm/bpf_perf_event.h&lt;br /&gt;  WRAP    arch/x86/include/generated/uapi/asm/errno.h&lt;br /&gt;  HOSTCC  arch/x86/tools/relocs_32.o&lt;br /&gt;  WRAP    arch/x86/include/generated/uapi/asm/fcntl.h&lt;br /&gt;  WRAP    arch/x86/include/generated/uapi/asm/ioctl.h&lt;br /&gt;  WRAP    arch/x86/include/generated/uapi/asm/ioctls.h&lt;br /&gt;  WRAP    arch/x86/include/generated/uapi/asm/ipcbuf.h&lt;br /&gt;  WRAP    arch/x86/include/generated/uapi/asm/param.h&lt;br /&gt;  WRAP    arch/x86/include/generated/uapi/asm/poll.h&lt;br /&gt;  WRAP    arch/x86/include/generated/uapi/asm/resource.h&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Una vez compilado el kernel, instalaremos el paquete .deb que se ha generado con el siguiente comando:&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; dpkg -i &lt;span class=&quot;token punctuation&quot;&gt;..&lt;/span&gt;/linux-image-6.0.3_6.0.3-1_amd64.deb&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ahora que está instalado el kernel, probaremos que funciona, para ello tendremos que reiniciar nuestra máquina y en &lt;em&gt;Advanced Options for Debian GNU/Linux&lt;/em&gt; seleccionaremos el nuevo kernel. Probaremos que todo funciona correctamente y volveremos a reiniciar y entraremos con el kernel que usamos habitualmente. Como podemos comprobar después de reiniciar, estamos usando el kernel 6.0.3.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://reeseschultz.github.io/img/ASO-P6.4.png&quot; alt=&quot;ASO-P6.4.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Ahora, realizaremos una nueva compilación y antes que nada, eliminaremos los ficheros residuales de la compilación. Para ello utilizaremos el siguiente comando.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://reeseschultz.github.io/img/ASO-P6.5.png&quot; alt=&quot;ASO-P6.5.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Para esta compilación, no vamos a usar los parametros &lt;em&gt;oldconfig&lt;/em&gt; ni &lt;em&gt;localmodconfig&lt;/em&gt;, usaremos &lt;em&gt;xconfig&lt;/em&gt; que es una aplicación gráfica para instalar los componentes a mano. Primero que nada instalaremos una dependencia:&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;apt&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; pkg-config&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ahora procederemos a hacer el make xconfig, nos aparecerá una ventana como la de la siguiente imagen y simplemente tenemos que quitar los módulos que no vayamos a usar en el kernel desenmarcando las casillas. Es un proceso largo y lento pero es sencillo de hacer.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://reeseschultz.github.io/img/ASO-P6.6.png&quot; alt=&quot;ASO-P6.6.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Volvemos a contar cuantos módulos tiene el kernel:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://reeseschultz.github.io/img/ASO-P6.7.png&quot; alt=&quot;ASO-P6.7.png&quot; /&gt;&lt;/p&gt;
&lt;h2 id=&quot;documento-realizado-por%3A&quot; tabindex=&quot;-1&quot;&gt;&lt;strong&gt;Documento realizado por:&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;✒️ &lt;strong&gt;Alejandro Montes Delgado&lt;/strong&gt; - &lt;em&gt;2º ASIR&lt;/em&gt;&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Ejercicios de modificación de parámetros del kérnel</title>
		<link href="https://reeseschultz.github.io/post/ejercicios-de-modificacion-de-parametros-del-kernel/"/>
		<updated>2022-11-08T00:00:00Z</updated>
		<id>https://reeseschultz.github.io/post/ejercicios-de-modificacion-de-parametros-del-kernel/</id>
		<content type="html">&lt;h3 id=&quot;1.-deshabilita-apparmor-en-el-arranque.&quot; tabindex=&quot;-1&quot;&gt;1. Deshabilita apparmor en el arranque.&lt;/h3&gt;
&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ &lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; systemctl disable apparmor&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;2.-deshabilita-si-es-posible-el-kernel-mode-setting-(ksm)-de-la-tarjeta-gr%C3%A1fica.&quot; tabindex=&quot;-1&quot;&gt;2. Deshabilita si es posible el Kernel Mode Setting (KSM) de la tarjeta gráfica.&lt;/h3&gt;
&lt;p&gt;Viene desactivado por defecto ya que mi tarjeta gráfica es amd.&lt;/p&gt;
&lt;h3 id=&quot;3.-cambia-provisionalmente-la-swappiness-para-que-la-swap-de-tu-equipo-se-active-cuando-se-use-m%C3%A1s-de-un-90%25-de-la-ram.&quot; tabindex=&quot;-1&quot;&gt;3. Cambia provisionalmente la swappiness para que la swap de tu equipo se active cuando se use más de un 90% de la RAM.&lt;/h3&gt;
&lt;p&gt;Con el cat vemos el valor por defecto y con el siguiente comando lo cambiamos:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://reeseschultz.github.io/img/ASO-P5.1.png&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;
&lt;h3 id=&quot;4.-haz-que-el-cambio-de-la-swappiness-sea-permanente.&quot; tabindex=&quot;-1&quot;&gt;4. Haz que el cambio de la swappiness sea permanente.&lt;/h3&gt;
&lt;p&gt;Para hacer el cambio permanente, tenemos que editar el fichero &lt;code&gt;sysctl.conf&lt;/code&gt;:&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ &lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;nano&lt;/span&gt; /etc/sysctl.conf&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;añadimos la siguiente línea en el archivo:&lt;/p&gt;
&lt;pre class=&quot;language-txt&quot;&gt;&lt;code class=&quot;language-txt&quot;&gt;vm.swappiness = 90&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;5.-muestra-el-valor-del-bit-de-forward-para-ipv6.&quot; tabindex=&quot;-1&quot;&gt;5. Muestra el valor del bit de forward para IPv6.&lt;/h3&gt;
&lt;p&gt;cat /proc/sys/net/ipv6/conf/all/forwarding
&lt;img src=&quot;https://reeseschultz.github.io/img/ASO-P5.2.png&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;
&lt;h3 id=&quot;6.-deshabilita-completamente-las-magic-sysrq-en-el-arranque-y-vuelve-a-habilitarlas-despu%C3%A9s-de-reiniciar.&quot; tabindex=&quot;-1&quot;&gt;6. Deshabilita completamente las Magic Sysrq en el arranque y vuelve a habilitarlas después de reiniciar.&lt;/h3&gt;
&lt;p&gt;Para deshabilitar las Magic Sysrq usamos el siguiente comando.&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ sysctl -w kernel.sysrq&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Si lo queremos volver a activar simplemente lo ponemos a 1 de nuevo:&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ sysctl -w kernel.sysrq&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;documento-realizado-por%3A&quot; tabindex=&quot;-1&quot;&gt;&lt;strong&gt;Documento realizado por:&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;✒️ &lt;strong&gt;Alejandro Montes Delgado&lt;/strong&gt; - &lt;em&gt;2º ASIR&lt;/em&gt;&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Ejercicios de manejo de módulos</title>
		<link href="https://reeseschultz.github.io/post/ejercicios-de-manejo-de-modulos/"/>
		<updated>2022-11-03T00:00:00Z</updated>
		<id>https://reeseschultz.github.io/post/ejercicios-de-manejo-de-modulos/</id>
		<content type="html">&lt;h3 id=&quot;1.-comprueba-los-m%C3%B3dulos-cargados-en-tu-equipo.&quot; tabindex=&quot;-1&quot;&gt;1. Comprueba los módulos cargados en tu equipo.&lt;/h3&gt;
&lt;p&gt;Para ver los módulos cargados de mi equipo, usamos el siguiente comando:&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ lsmod&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;https://reeseschultz.github.io/img/ASO-P4.1.png&quot; alt=&quot;Imagen no encontrada: /img/ASO-P4.1.png&quot; title=&quot;Imagen no encontrada: /img/ASO-P4.1.png&quot; /&gt;
lsmod, lo que hace es leer el contenido del archivo /proc/modules.&lt;/p&gt;
&lt;h3 id=&quot;2.-cuenta-el-n%C3%BAmero-de-m%C3%B3dulos-disponibles-en-el-n%C3%BAcleo-que-est%C3%A1s-usando.&quot; tabindex=&quot;-1&quot;&gt;2. Cuenta el número de módulos disponibles en el núcleo que estás usando.&lt;/h3&gt;
&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ &lt;span class=&quot;token function&quot;&gt;ls&lt;/span&gt; -R /lib/modules/&lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;uname&lt;/span&gt; -r&lt;span class=&quot;token variable&quot;&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;wc&lt;/span&gt; -l&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;https://reeseschultz.github.io/img/ASO-P4.2.png&quot; alt=&quot;ASO-P4.2.png&quot; /&gt;&lt;/p&gt;
&lt;h3 id=&quot;3.-conecta-un-l%C3%A1piz-usb-y-observa-la-salida-de-la-instrucci%C3%B3n-sudo-dmesg.&quot; tabindex=&quot;-1&quot;&gt;3. Conecta un lápiz USB y observa la salida de la instrucción sudo dmesg.&lt;/h3&gt;
&lt;p&gt;he ejecutado el siguiente comando:&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ &lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;dmesg&lt;/span&gt; -w&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;lo que hace el parametro -w es que se actualiza en el momento el comando, y al añadir el Pen-Drive se han añadido estas líneas:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://reeseschultz.github.io/img/ASO-P4-3.png&quot; alt=&quot;ASO-P4.3.png&quot; /&gt;&lt;/p&gt;
&lt;h3 id=&quot;4.-elimina-el-m%C3%B3dulo-correspondiente-a-alg%C3%BAn-dispotivo-no-esencial-y-comprueba-qu%C3%A9-ocurre.-vuelve-a-cargarlo.&quot; tabindex=&quot;-1&quot;&gt;4. Elimina el módulo correspondiente a algún dispotivo no esencial y comprueba qué ocurre. Vuelve a cargarlo.&lt;/h3&gt;
&lt;p&gt;Vamos a eliminar el modulo usb storage, pero al hacer un lsmod vemos que usb_storage depende de uas, entonces, tenemos que eliminar el modulo uas primero y despues el de usb-storage.&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ modprobe -r uas&lt;br /&gt;$ modprobe -r usb_storage&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;https://reeseschultz.github.io/img/ASO-P4.4.png&quot; alt=&quot;ASO-P4.4.png&quot; /&gt;&lt;/p&gt;
&lt;h3 id=&quot;5.-selecciona-un-m%C3%B3dulo-que-est%C3%A9-en-uso-en-tu-equipo-y-configura-el-arranque-para-que-no-se-cargue-autom%C3%A1ticamente.&quot; tabindex=&quot;-1&quot;&gt;5. Selecciona un módulo que esté en uso en tu equipo y configura el arranque para que no se cargue automáticamente.&lt;/h3&gt;
&lt;p&gt;Editamos el siguiente fichero:&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ &lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;nano&lt;/span&gt; /etc/modprobe.d/blacklist.conf&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Añadimos lo siguiente:&lt;/p&gt;
&lt;pre class=&quot;language-txt&quot;&gt;&lt;code class=&quot;language-txt&quot;&gt;blacklist [nombre_modulo]&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Una vez hecho esto ejecutamos el siguiente comando para actualizar:&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ &lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; update-initramfs -u&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;6.-carga-el-m%C3%B3dulo-loop%2C-obt%C3%A9n-informaci%C3%B3n-de-qu%C3%A9-es-y-para-qu%C3%A9-sirve.-lista-el-contenido-de-%2Fsys%2Fmodules%2Floop%2Fparameters-y-configura-el-equipo-para-que-se-puedan-cargar-como-m%C3%A1ximo-12-dispositvos-loop-la-pr%C3%B3xima-vez-que-se-arranque.&quot; tabindex=&quot;-1&quot;&gt;6. Carga el módulo loop, obtén información de qué es y para qué sirve. Lista el contenido de /sys/modules/loop/parameters y configura el equipo para que se puedan cargar como máximo 12 dispositvos loop la próxima vez que se arranque.&lt;/h3&gt;
&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ &lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; modprobe loop&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;https://reeseschultz.github.io/img/ASO-P4.6.png&quot; alt=&quot;ASO-P4.6.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://reeseschultz.github.io/img/ASO-P4.7.png&quot; alt=&quot;ASO-P4.7.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;editamos el siguiente fichero:&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ &lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;nano&lt;/span&gt; /etc/modules&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;añadimos lo siguiente:&lt;/p&gt;
&lt;pre class=&quot;language-txt&quot;&gt;&lt;code class=&quot;language-txt&quot;&gt;options loop max_loop=12&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Una vez hecho esto ejecutamos el siguiente comando para actualizar:&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ &lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; update-initramfs -u&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;documento-realizado-por%3A&quot; tabindex=&quot;-1&quot;&gt;&lt;strong&gt;Documento realizado por:&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;✒️ &lt;strong&gt;Alejandro Montes Delgado&lt;/strong&gt; - &lt;em&gt;2º ASIR&lt;/em&gt;&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Creación de instancias desde OSC</title>
		<link href="https://reeseschultz.github.io/post/creacion-de-instancias-desde-osc/"/>
		<updated>2022-11-03T00:00:00Z</updated>
		<id>https://reeseschultz.github.io/post/creacion-de-instancias-desde-osc/</id>
		<content type="html">&lt;ol&gt;
&lt;li&gt;Instala el cliente de línea de comando de OpenStack cómo se muestra en &lt;a href=&quot;https://github.com/josedom24/curso_openstack_ies/blob/main/modulo1/osc.md&quot;&gt;Instalación y uso básico de OpenStack client (OSC)&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Primero vamos a crear un entorno virtual donde vamos a trabajar con OpenStack client, para ello instalaremos python y venv si es necesario.&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;apt&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; python3 python3-venv&lt;br /&gt;&lt;span class=&quot;token function&quot;&gt;mkdir&lt;/span&gt; venv&lt;br /&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;cd&lt;/span&gt; venv&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Activamos el entorno virtual con el siguiente comando:&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;mkdir&lt;/span&gt; osc&lt;br /&gt;python3 -m venv osc&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Usamos el siguiente comando para instalar en el entorno virtual el cliente de openstack:&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;pip &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; python-openstackclient&lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;5.8&lt;/span&gt;.0&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&quot;3&quot;&gt;
&lt;li&gt;Descarga de Horizon tu fichero de credenciales, cargálo y ejecuta la instrucción &lt;code&gt;openstack server list&lt;/code&gt; para visualizar tus instancias.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Una vez descargado el fichero, realizamos lo siguiente:&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;source&lt;/span&gt; crendenciales.sh&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;tendríamos que insertar la contraseña con la que entramos a openstack y ya podríamos interactuar con el servidor openstack.&lt;/p&gt;
&lt;ol start=&quot;5&quot;&gt;
&lt;li&gt;Vamos a crear una instancia y la vamos a configurar con &lt;a href=&quot;https://github.com/josedom24/curso_openstack_ies/blob/main/modulo3/cloudinit.md&quot;&gt;&lt;strong&gt;cloud-init&lt;/strong&gt;&lt;/a&gt;, para ello crea un fichero &lt;code&gt;cloud-config.yaml&lt;/code&gt; con el siguiente contenido:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&quot;language-yaml&quot;&gt;&lt;code class=&quot;language-yaml&quot;&gt;    &lt;span class=&quot;token comment&quot;&gt;#cloud-config&lt;/span&gt;&lt;br /&gt;         &lt;span class=&quot;token key atrule&quot;&gt;package_update&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean important&quot;&gt;true&lt;/span&gt;&lt;br /&gt;         &lt;span class=&quot;token key atrule&quot;&gt;package_upgrade&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean important&quot;&gt;true&lt;/span&gt;&lt;br /&gt;         &lt;span class=&quot;token key atrule&quot;&gt;preserve_hostname&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean important&quot;&gt;false&lt;/span&gt;&lt;br /&gt;         &lt;span class=&quot;token key atrule&quot;&gt;fqdn&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; test1.gonzalonazareno.org&lt;br /&gt;         &lt;span class=&quot;token key atrule&quot;&gt;hostname&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; prueba&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;alemd&lt;br /&gt;         &lt;span class=&quot;token comment&quot;&gt;# Crear un usuario y añadir clave pública ssh&lt;/span&gt;&lt;br /&gt;         &lt;span class=&quot;token key atrule&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;br /&gt;           &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; jose&lt;br /&gt;             &lt;span class=&quot;token key atrule&quot;&gt;sudo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; ALL=(ALL) NOPASSWD&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;ALL&lt;br /&gt;             &lt;span class=&quot;token key atrule&quot;&gt;shell&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; /bin/bash&lt;br /&gt;             &lt;span class=&quot;token key atrule&quot;&gt;passwd&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; asdasd&lt;br /&gt;             &lt;span class=&quot;token key atrule&quot;&gt;ssh_authorized_keys&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;br /&gt;             &lt;span class=&quot;token comment&quot;&gt;# Clave pública de nuestra máquina.&lt;/span&gt;&lt;br /&gt;               &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; ssh&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;rsa &lt;br /&gt;           &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; alemd&lt;br /&gt;             &lt;span class=&quot;token key atrule&quot;&gt;sudo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; ALL=(ALL) NOPASSWD&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;ALL&lt;br /&gt;             &lt;span class=&quot;token key atrule&quot;&gt;shell&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; /bin/bash&lt;br /&gt;             &lt;span class=&quot;token key atrule&quot;&gt;passwd&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; usuario&lt;br /&gt;           &lt;span class=&quot;token comment&quot;&gt;#  ssh_authorized_keys:&lt;/span&gt;&lt;br /&gt;             &lt;span class=&quot;token comment&quot;&gt;# Clave pública de nuestra máquina.&lt;/span&gt;&lt;br /&gt;             &lt;span class=&quot;token comment&quot;&gt;#  - ssh-rsa &lt;/span&gt;&lt;br /&gt;&lt;br /&gt;         &lt;span class=&quot;token key atrule&quot;&gt;chpasswd&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;br /&gt;           &lt;span class=&quot;token key atrule&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;token scalar string&quot;&gt;&lt;br /&gt;             root:asdasd&lt;/span&gt;&lt;br /&gt;           &lt;span class=&quot;token key atrule&quot;&gt;expire&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean important&quot;&gt;False&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Modifica el fichero e indica un nombre a la máquina, crea otro usuario y cambia las contraseñas.&lt;/p&gt;
&lt;p&gt;Este fichero actualizará la paquetería de la instancia, configurará el FQDN de la instancia, creará un nuevo usuario y cambiará la contraseña del usuario &lt;code&gt;root&lt;/code&gt;.&lt;/p&gt;
&lt;ol start=&quot;4&quot;&gt;
&lt;li&gt;Siguiendo el apartado &lt;a href=&quot;https://github.com/josedom24/curso_openstack_ies/blob/main/modulo3/osc_nova.md&quot;&gt;Gestión de instancia con OpenStack client (OSC)&lt;/a&gt;, visualiza con el OSC los flavors disponibles, imágenes disponibles, claves disponibles, reglas de cortafuegos,…&lt;/li&gt;
&lt;li&gt;Crea una nueva instancia usando el comando que encontrarás en la sección &lt;a href=&quot;https://github.com/josedom24/curso_openstack_ies/blob/main/modulo1/osc.md&quot;&gt;Configuración de instancias con cloud-init&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Añade una IP flotante a la instancia para ello puedes usar los comandos que encuentras en &lt;a href=&quot;https://github.com/josedom24/curso_openstack_ies/blob/main/modulo3/osc_nova.md&quot;&gt;Gestión de instancia con OpenStack client (OSC)&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Accede por ssh (recuerda usar el usuario que has creado con cloud-init) a la instancia.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;documento-realizado-por%3A&quot; tabindex=&quot;-1&quot;&gt;&lt;strong&gt;Documento realizado por:&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;✒️ &lt;strong&gt;Alejandro Montes Delgado&lt;/strong&gt; - &lt;em&gt;2º ASIR&lt;/em&gt;&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Ejercicios gestión de paquetería</title>
		<link href="https://reeseschultz.github.io/post/ejercicios-gestion-de-paqueteria/"/>
		<updated>2022-10-18T00:00:00Z</updated>
		<id>https://reeseschultz.github.io/post/ejercicios-gestion-de-paqueteria/</id>
		<content type="html">&lt;h1 id=&quot;trabajo-con-apt%2C-aptitude%2C-dpkg&quot; tabindex=&quot;-1&quot;&gt;Trabajo con apt, aptitude, dpkg&lt;/h1&gt;
&lt;h4 id=&quot;prepara-una-m%C3%A1quina-virtual-con-debian-bullseye%2C-realizar-las-siguientes-acciones%3A&quot; tabindex=&quot;-1&quot;&gt;Prepara una máquina virtual con Debian bullseye, realizar las siguientes acciones:&lt;/h4&gt;
&lt;h3 id=&quot;1.-que-acciones-consigo-al-realizar-apt-update-y-apt-upgrade.-explica-detalladamente.&quot; tabindex=&quot;-1&quot;&gt;1. Que acciones consigo al realizar apt update y apt upgrade. Explica detalladamente.&lt;/h3&gt;
&lt;p&gt;Al hacer un apt update, actualizas la lista de paquetes que hay disponible y sus versiones en los repositorios aunque no realiza ninguna instalación.
Después de hacer un apt update, hay que hacer un apt upgrade, permite instalar si no tiene instalado y actualiza versiones de los paquetes ya instalados.&lt;/p&gt;
&lt;h3 id=&quot;2.-lista-la-relaci%C3%B3n-de-paquetes-que-pueden-ser-actualizados.-%C2%BFqu%C3%A9-informaci%C3%B3n-puedes-sacar-a-tenor-de-lo-mostrado-en-el-listado%3F.&quot; tabindex=&quot;-1&quot;&gt;2. Lista la relación de paquetes que pueden ser actualizados. ¿Qué información puedes sacar a tenor de lo mostrado en el listado?.&lt;/h3&gt;
&lt;p&gt;Para mostrar los paquetes que pueden ser instalados, se usa el siguiente comando:&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ &lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;apt&lt;/span&gt; list --upgradable&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Muestro captura del comando ejecutado en mi máquina.
&lt;img src=&quot;https://reeseschultz.github.io/img/ASO-P3.1.png&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;
&lt;p&gt;En la línea el resaltado verde apunta al nombre del paquete. oldstable indica que no es de la versión stable de debian(esa máquina es debian buster). Los números siguientes indican la versión del paquete y lo siguiente a la arquitectura del paquete(amd64).&lt;/p&gt;
&lt;h3 id=&quot;3.-indica-la-versi%C3%B3n-instalada%2C-candidata-as%C3%AD-como-la-prioridad-del-paquete-openssh-client.&quot; tabindex=&quot;-1&quot;&gt;3. Indica la versión instalada, candidata así como la prioridad del paquete openssh-client.&lt;/h3&gt;
&lt;p&gt;Para ver la versión instalada y la candidata de un paquete usamos el siguiente comando:&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ &lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;apt&lt;/span&gt; policy openssh-client&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;En la siguiente captura veremos la ejecución del comando:
&lt;img src=&quot;https://reeseschultz.github.io/img/ASO-P3.2.png&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Como indica la imagen, la versión instalada es la 1.7.9, la candidata es la misma y la prioridad es 500.&lt;/p&gt;
&lt;h3 id=&quot;4.-%C2%BFc%C3%B3mo-puedes-sacar-informaci%C3%B3n-de-un-paquete-oficial-instalado-o-que-no-este-instalado%3F&quot; tabindex=&quot;-1&quot;&gt;4. ¿Cómo puedes sacar información de un paquete oficial instalado o que no este instalado?&lt;/h3&gt;
&lt;p&gt;para ver información de un paquete oficial instalado, usariamos dpkg -s nombre_paquete.&lt;/p&gt;
&lt;p&gt;Si no está instalado, se puede ver información de un paquete usando apt show nombre_paquete&lt;/p&gt;
&lt;h3 id=&quot;5.-saca-toda-la-informaci%C3%B3n-que-puedas-del-paquete-openssh-client-que-tienes-actualmente-instalado-en-tu-m%C3%A1quina.&quot; tabindex=&quot;-1&quot;&gt;5. Saca toda la información que puedas del paquete openssh-client que tienes actualmente instalado en tu máquina.&lt;/h3&gt;
&lt;p&gt;Para ver mucha información del paquete podemos usar &lt;em&gt;dpkg -s openssh-client&lt;/em&gt;.&lt;/p&gt;
&lt;pre class=&quot;language-txt&quot;&gt;&lt;code class=&quot;language-txt&quot;&gt;Package: openssh-client&lt;br /&gt;Status: install ok installed&lt;br /&gt;Priority: standard&lt;br /&gt;Section: net&lt;br /&gt;Installed-Size: 4298&lt;br /&gt;Maintainer: Debian OpenSSH Maintainers &amp;lt;debian-ssh@lists.debian.org&gt;&lt;br /&gt;Architecture: amd64&lt;br /&gt;Multi-Arch: foreign&lt;br /&gt;Source: openssh&lt;br /&gt;Version: 1:8.4p1-5+deb11u1&lt;br /&gt;Replaces: openssh-sk-helper, ssh, ssh-krb5&lt;br /&gt;Provides: rsh-client, ssh-client&lt;br /&gt;Depends: adduser (&gt;= 3.10), dpkg (&gt;= 1.7.0), passwd, libc6 (&gt;= 2.26), libedit2 (&gt;= 2.11-20080614-0), libfido2-1 (&gt;= 1.5.0), libgssapi-krb5-2 (&gt;= 1.17), libselinux1 (&gt;= 3.1~), libssl1.1 (&gt;= 1.1.1), zlib1g (&gt;= 1:1.1.4)&lt;br /&gt;Recommends: xauth&lt;br /&gt;Suggests: keychain, libpam-ssh, monkeysphere, ssh-askpass&lt;br /&gt;Breaks: openssh-sk-helper&lt;br /&gt;Conflicts: sftp&lt;br /&gt;Conffiles:&lt;br /&gt; /etc/ssh/ssh_config 8a5bddc82befb71d8ef34cc903d3d077&lt;br /&gt;Description: secure shell (SSH) client, for secure access to remote machines&lt;br /&gt; This is the portable version of OpenSSH, a free implementation of&lt;br /&gt; the Secure Shell protocol as specified by the IETF secsh working&lt;br /&gt; group.&lt;br /&gt; .&lt;br /&gt; Ssh (Secure Shell) is a program for logging into a remote machine&lt;br /&gt; and for executing commands on a remote machine.&lt;br /&gt; It provides secure encrypted communications between two untrusted&lt;br /&gt; hosts over an insecure network. X11 connections and arbitrary TCP/IP&lt;br /&gt; ports can also be forwarded over the secure channel.&lt;br /&gt; It can be used to provide applications with a secure communication&lt;br /&gt; channel.&lt;br /&gt; .&lt;br /&gt; This package provides the ssh, scp and sftp clients, the ssh-agent&lt;br /&gt; and ssh-add programs to make public key authentication more convenient,&lt;br /&gt; and the ssh-keygen, ssh-keyscan, ssh-copy-id and ssh-argv0 utilities.&lt;br /&gt; .&lt;br /&gt; In some countries it may be illegal to use any encryption at all&lt;br /&gt; without a special permit.&lt;br /&gt; .&lt;br /&gt; ssh replaces the insecure rsh, rcp and rlogin programs, which are&lt;br /&gt; obsolete for most purposes.&lt;br /&gt;Homepage: http://www.openssh.com/&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Como podemos ver, nos muestra una descripción, si está instalado, la prioridad, el directorio del fichero de configuración…&lt;/p&gt;
&lt;h3 id=&quot;6.-saca-toda-la-informaci%C3%B3n-que-puedas-del-paquete-openssh-client-candidato-a-actualizar-en-tu-m%C3%A1quina.&quot; tabindex=&quot;-1&quot;&gt;6. Saca toda la información que puedas del paquete openssh-client candidato a actualizar en tu máquina.&lt;/h3&gt;
&lt;h3 id=&quot;7.-lista-todo-el-contenido-referente-al-paquete-openssh-client-actual-de-tu-m%C3%A1quina.-utiliza-para-ello-tanto-dpkg-como-apt.&quot; tabindex=&quot;-1&quot;&gt;7. Lista todo el contenido referente al paquete openssh-client actual de tu máquina. Utiliza para ello tanto dpkg como apt.&lt;/h3&gt;
&lt;p&gt;Para listar el contenido del paquete con dpkg usamos el siguiente comando:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://reeseschultz.github.io/img/ASO-P3.3.png&quot; alt=&quot;imagen&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Para listar el contenido del paquete con apt usamos el siguiente comando:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://reeseschultz.github.io/img/ASO-P3.4.png&quot; alt=&quot;imagen&quot; /&gt;&lt;/p&gt;
&lt;h3 id=&quot;8.-listar-el-contenido-de-un-paquete-sin-la-necesidad-de-instalarlo-o-descargarlo.&quot; tabindex=&quot;-1&quot;&gt;8. Listar el contenido de un paquete sin la necesidad de instalarlo o descargarlo.&lt;/h3&gt;
&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ &lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; apt-file list nombre_paquete&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;9.-simula-la-instalaci%C3%B3n-del-paquete-openssh-client.&quot; tabindex=&quot;-1&quot;&gt;9. Simula la instalación del paquete openssh-client.&lt;/h3&gt;
&lt;p&gt;Para simular una instalación con apt, se usa el parámetro -s. A continuación, muestro la ejecución del comando:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://reeseschultz.github.io/img/ASO-P3.5.png&quot; alt=&quot;imagen&quot; /&gt;&lt;/p&gt;
&lt;h3 id=&quot;10.-%C2%BFqu%C3%A9-comando-te-informa-de-los-posible-bugs-que-presente-un-determinado-paquete%3F&quot; tabindex=&quot;-1&quot;&gt;10. ¿Qué comando te informa de los posible bugs que presente un determinado paquete?&lt;/h3&gt;
&lt;p&gt;El comando que informa sobre los posibles bugs de un paquete es el siguiente:&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ &lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; apt-listbugs -s all nombre_paquete&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;11.-despu%C3%A9s-de-realizar-un-apt-update-%26%26-apt-upgrade.-si-quisieras-actualizar-%C3%BAnicamente-los-paquetes-que-tienen-de-cadena-openssh.-%C2%BFqu%C3%A9-procedimiento-seguir%C3%ADas%3F.-realiza-esta-acci%C3%B3n%2C-con-las-estructuras-repetitivas-que-te-ofrece-bash%2C-as%C3%AD-como-con-el-comando-xargs.&quot; tabindex=&quot;-1&quot;&gt;11. Después de realizar un apt update &amp;amp;&amp;amp; apt upgrade. Si quisieras actualizar únicamente los paquetes que tienen de cadena openssh. ¿Qué procedimiento seguirías?. Realiza esta acción, con las estructuras repetitivas que te ofrece bash, así como con el comando xargs.&lt;/h3&gt;
&lt;h3 id=&quot;12.-%C2%BFc%C3%B3mo-encontrar%C3%ADas-qu%C3%A9-paquetes-dependen-de-un-paquete-espec%C3%ADfico.&quot; tabindex=&quot;-1&quot;&gt;12. ¿Cómo encontrarías qué paquetes dependen de un paquete específico.&lt;/h3&gt;
&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ &lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;apt-cache&lt;/span&gt; depends nombre_paquete&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Y para dependencias inversas:&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ &lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;apt-cache&lt;/span&gt; rdepends nombre_paquete&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;13.-%C2%BFc%C3%B3mo-proceder%C3%ADas-para-encontrar-el-paquete-al-que-pertenece-un-determinado-fichero%3F&quot; tabindex=&quot;-1&quot;&gt;13. ¿Cómo procederías para encontrar el paquete al que pertenece un determinado fichero?&lt;/h3&gt;
&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ apt-file search ruta&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;14.-%C2%BFque-procedimientos-emplear%C3%ADas-para-liberar-la-cach%C3%A9-en-cuanto-a-descargas-de-paqueter%C3%ADa%3F&quot; tabindex=&quot;-1&quot;&gt;14. ¿Que procedimientos emplearías para liberar la caché en cuanto a descargas de paquetería?&lt;/h3&gt;
&lt;p&gt;Con &lt;code&gt;apt autoclean&lt;/code&gt; elimina paquetes de la caché que tiene una versión mas moderna.&lt;/p&gt;
&lt;h3 id=&quot;15.-realiza-la-instalaci%C3%B3n-del-paquete-keyboard-configuration-pasando-previamente-los-valores-de-los-par%C3%A1metros-de-configuraci%C3%B3n-como-variables-de-entorno.&quot; tabindex=&quot;-1&quot;&gt;15. Realiza la instalación del paquete keyboard-configuration pasando previamente los valores de los parámetros de configuración como variables de entorno.&lt;/h3&gt;
&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ debconf keyboard-configuration&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;16.-reconfigura-el-paquete-locales-de-tu-equipo%2C-a%C3%B1adiendo-una-localizaci%C3%B3n-que-no-exista-previamente.-comprueba-a-modificar-las-variables-de-entorno-correspondientes-para-que-la-sesi%C3%B3n-del-usuario-utilice-otra-localizaci%C3%B3n.&quot; tabindex=&quot;-1&quot;&gt;16. Reconfigura el paquete locales de tu equipo, añadiendo una localización que no exista previamente. Comprueba a modificar las variables de entorno correspondientes para que la sesión del usuario utilice otra localización.&lt;/h3&gt;
&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ &lt;span class=&quot;token builtin class-name&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token assign-left variable&quot;&gt;&lt;span class=&quot;token environment constant&quot;&gt;LANG&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;en_GB.utf8&lt;br /&gt;$ &lt;span class=&quot;token builtin class-name&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token assign-left variable&quot;&gt;&lt;span class=&quot;token environment constant&quot;&gt;LANGUAGE&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;en_GB.utf8&lt;br /&gt;$ &lt;span class=&quot;token builtin class-name&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token assign-left variable&quot;&gt;&lt;span class=&quot;token environment constant&quot;&gt;LC_ALL&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;en_GB.utf8&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ &lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; dpkg-reconfigure locales -f --frontend Noninteractive&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;17.-interrumpe-la-configuraci%C3%B3n-de-un-paquete-y-explica-los-pasos-a-dar-para-continuar-la-instalaci%C3%B3n.&quot; tabindex=&quot;-1&quot;&gt;17. Interrumpe la configuración de un paquete y explica los pasos a dar para continuar la instalación.&lt;/h3&gt;
&lt;p&gt;Probariamos con dpkg --configure -a. Si no funciona, tendríamos que limpiar la caché, apt clean y apt autoclean. Haríamos un apt-get update --fix-missing y apt-get install -f para recuperar las dependencias dañadas.&lt;/p&gt;
&lt;h3 id=&quot;18.-explica-la-instrucci%C3%B3n-que-utilizar%C3%ADas-para-hacer-una-actualizaci%C3%B3n-completa-de-todos-los-paquetes-de-tu-sistema-de-manera-completamente-no-interactiva&quot; tabindex=&quot;-1&quot;&gt;18. Explica la instrucción que utilizarías para hacer una actualización completa de todos los paquetes de tu sistema de manera completamente no interactiva&lt;/h3&gt;
&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ &lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;apt&lt;/span&gt; update &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;apt&lt;/span&gt; upgrade -y&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;19.-bloquea-la-actualizaci%C3%B3n-de-determinados-paquetes.&quot; tabindex=&quot;-1&quot;&gt;19. Bloquea la actualización de determinados paquetes.&lt;/h3&gt;
&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ &lt;span class=&quot;token function&quot;&gt;apt&lt;/span&gt; mark hold paquete&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&quot;trabajo-con-ficheros-.deb&quot; tabindex=&quot;-1&quot;&gt;Trabajo con ficheros .deb&lt;/h1&gt;
&lt;h3 id=&quot;1.-descarga-un-paquete-sin-instalarlo%2C-es-decir%2C-descarga-el-fichero-.deb-correspondiente.-indica-diferentes-formas-de-hacerlo.&quot; tabindex=&quot;-1&quot;&gt;1. Descarga un paquete sin instalarlo, es decir, descarga el fichero .deb correspondiente. Indica diferentes formas de hacerlo.&lt;/h3&gt;
&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ &lt;span class=&quot;token function&quot;&gt;wget&lt;/span&gt; url_paquete&lt;br /&gt;&lt;br /&gt;$ &lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;apt-get&lt;/span&gt; download nombrepaquete&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;2.-%C2%BFc%C3%B3mo-puedes-ver-el-contenido%2C-que-no-extraerlo%2C-de-lo-que-se-instalar%C3%A1-en-el-sistema-de-un-paquete-deb%3F&quot; tabindex=&quot;-1&quot;&gt;2. ¿Cómo puedes ver el contenido, que no extraerlo, de lo que se instalará en el sistema de un paquete deb?&lt;/h3&gt;
&lt;p&gt;si es un .deb:&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ dpkg -c nombrepaquete&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;O con tar:&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ &lt;span class=&quot;token function&quot;&gt;tar&lt;/span&gt; -tf nombre_paquete.tar.gz&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;3.-sobre-el-fichero-.deb-descargado%2C-utiliza-el-comando-ar.-ar-permite-extraer-el-contenido-de-una-paquete-deb.-indica-el-procedimiento-para-visualizar-con-ar-el-contenido-del-paquete-deb.-con-el-paquete-que-has-descargado-y-utilizando-el-comando-ar%2C-descomprime-el-paquete.-%C2%BFqu%C3%A9-informaci%C3%B3n-dispones-despu%C3%A9s-de-la-extracci%C3%B3n%3F.-indica-la-finalidad-de-lo-extra%C3%ADdo.&quot; tabindex=&quot;-1&quot;&gt;3. Sobre el fichero .deb descargado, utiliza el comando ar. ar permite extraer el contenido de una paquete deb. Indica el procedimiento para visualizar con ar el contenido del paquete deb. Con el paquete que has descargado y utilizando el comando ar, descomprime el paquete. ¿Qué información dispones después de la extracción?. Indica la finalidad de lo extraído.&lt;/h3&gt;
&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ ar -tvx *.deb&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Se extrae:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;debian-binary&lt;/em&gt; que indica la versión del archivo.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;control.tar.xz&lt;/em&gt; que tiene scritps de preinstalación, postinstalación, preborrado, postborrado, configuración…&lt;/li&gt;
&lt;li&gt;data.tar.xz en este paquete se encuentra todos los archivos que serán extraídos con dpkg.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;4.-indica-el-procedimiento-para-descomprimir-lo-extra%C3%ADdo-por-ar-del-punto-anterior.-%C2%BFqu%C3%A9-informaci%C3%B3n-contiene%3F&quot; tabindex=&quot;-1&quot;&gt;4. Indica el procedimiento para descomprimir lo extraído por ar del punto anterior. ¿Qué información contiene?&lt;/h3&gt;
&lt;p&gt;tar xvf nombrearchivo.&lt;/p&gt;
&lt;h1 id=&quot;trabajo-con-repositorios&quot; tabindex=&quot;-1&quot;&gt;Trabajo con repositorios&lt;/h1&gt;
&lt;h3 id=&quot;1.-a%C3%B1ade-a-tu-fichero-sources.list-los-repositorios-de-bullseye-backports-y-sid.&quot; tabindex=&quot;-1&quot;&gt;1. Añade a tu fichero sources.list los repositorios de bullseye-backports y sid.&lt;/h3&gt;
&lt;p&gt;Tenemos que editar el fichero sources.list:&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ &lt;span class=&quot;token function&quot;&gt;nano&lt;/span&gt; /etc/apt/sources.list&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Añadimos al sources.list lo siguiente:&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;deb https://deb.debian.org/debian bullseye-backports main&lt;br /&gt;deb https://deb.debian.org/debian sid main&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;2.-configura-el-sistema-apt-para-que-los-paquetes-de-debian-bullseye-tengan-mayor-prioridad-y-por-tanto-sean-los-que-se-instalen-por-defecto.&quot; tabindex=&quot;-1&quot;&gt;2. Configura el sistema APT para que los paquetes de debian bullseye tengan mayor prioridad y por tanto sean los que se instalen por defecto.&lt;/h3&gt;
&lt;p&gt;Para dar prioridad a los paquetes de debian bullseye, tenemos que crear un archivo llamado &lt;code&gt;preferences.pref&lt;/code&gt; y debe contener lo siguiente:&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ &lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;nano&lt;/span&gt; /etc/apt/preferences.d/preferences.p&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;language-txt&quot;&gt;&lt;code class=&quot;language-txt&quot;&gt;Package: *&lt;br /&gt;Pin: release a=stable&lt;br /&gt;Pin-Priority: 1000&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;3.-configura-el-sistema-apt-para-que-los-paquetes-de-bullseye-backports-tengan-mayor-prioridad-que-los-de-unstable.&quot; tabindex=&quot;-1&quot;&gt;3. Configura el sistema APT para que los paquetes de bullseye-backports tengan mayor prioridad que los de unstable.&lt;/h3&gt;
&lt;p&gt;Tenemos que hacer lo mismo que antes pero cambiando lo siguiente:&lt;/p&gt;
&lt;pre class=&quot;language-txt&quot;&gt;&lt;code class=&quot;language-txt&quot;&gt;Pin: release a=stable&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Por esto:&lt;/p&gt;
&lt;pre class=&quot;language-txt&quot;&gt;&lt;code class=&quot;language-txt&quot;&gt;Pin: release a=bullseye-backports&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;4.-%C2%BFc%C3%B3mo-a%C3%B1ades-la-posibilidad-de-descargar-paqueter%C3%ADa-de-la-arquitectura-i386-en-tu-sistema.-%C2%BFque-comando-has-empleado%3F.-lista-arquitecturas-no-nativas.-%C2%BFc%C3%B3mo-proceder%C3%ADas-para-desechar-la-posibilidad-de-descargar-paqueter%C3%ADa-de-la-arquitectura-i386%3F&quot; tabindex=&quot;-1&quot;&gt;4. ¿Cómo añades la posibilidad de descargar paquetería de la arquitectura i386 en tu sistema. ¿Que comando has empleado?. Lista arquitecturas no nativas. ¿Cómo procederías para desechar la posibilidad de descargar paquetería de la arquitectura i386?&lt;/h3&gt;
&lt;p&gt;El siguiente comando es para añadir:&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ &lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; dpkg --add-architecture i386&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Este comando lista las arquitecturas soportadas por nuestro sistema:&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ dpkg --prin-architectures&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;este comando elimina las arquitecturas:&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ dpkg --remove-architecture i386&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;5.-si-quisieras-descargar-un-paquete%2C-%C2%BFc%C3%B3mo-puedes-saber-todas-las-versiones-disponible-de-dicho-paquete%3F&quot; tabindex=&quot;-1&quot;&gt;5. Si quisieras descargar un paquete, ¿cómo puedes saber todas las versiones disponible de dicho paquete?&lt;/h3&gt;
&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ &lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;apt&lt;/span&gt; show --all-versions nombrepaquete&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;6.-indica-el-procedimiento-para-descargar-un-paquete-del-repositorio-stable.&quot; tabindex=&quot;-1&quot;&gt;6. Indica el procedimiento para descargar un paquete del repositorio stable.&lt;/h3&gt;
&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ &lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;apt&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; -t stable nombrepaquete&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;7.-indica-el-procedimiento-para-descargar-un-paquete-del-repositorio-de-buster-backports.&quot; tabindex=&quot;-1&quot;&gt;7. Indica el procedimiento para descargar un paquete del repositorio de buster-backports.&lt;/h3&gt;
&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ &lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;apt&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; -t bullseye-backports nombrepaquete&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;8.-indica-el-procedimiento-para-descargar-un-paquete-del-repositorio-de-sid.&quot; tabindex=&quot;-1&quot;&gt;8. Indica el procedimiento para descargar un paquete del repositorio de sid.&lt;/h3&gt;
&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ &lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;apt&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; -t sid nombrepaquete&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;9.-indica-el-procedimiento-para-descargar-un-paquete-de-arquitectura-i386.&quot; tabindex=&quot;-1&quot;&gt;9. Indica el procedimiento para descargar un paquete de arquitectura i386.&lt;/h3&gt;
&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ &lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;apt&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; nombrepaquete:i386&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&quot;trabajo-con-directorios&quot; tabindex=&quot;-1&quot;&gt;Trabajo con directorios&lt;/h1&gt;
&lt;h3 id=&quot;1.-que-cometidos-tienen%3A&quot; tabindex=&quot;-1&quot;&gt;1. Que cometidos tienen:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;/var/lib/apt/lists/&lt;/strong&gt;: En este directorio contiene características sobre los repositorios.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;/var/lib/dpkg/available&lt;/strong&gt;: Lista con los paquetes que hay disponibles.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;/var/lib/dpkg/status&lt;/strong&gt;: En este directorio, hay información sobre los paquetes instalados en el sistema.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;/var/cache/apt/archives/&lt;/strong&gt;: Aquí hay los archivos &lt;code&gt;.deb&lt;/code&gt; que estan instalados.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;&lt;/p&gt;
&lt;h2 id=&quot;documento-realizado-por%3A&quot; tabindex=&quot;-1&quot;&gt;&lt;strong&gt;Documento realizado por:&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;✒️ &lt;strong&gt;Alejandro Montes Delgado&lt;/strong&gt; - &lt;em&gt;2º ASIR&lt;/em&gt;&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Prueba: Introducción a la implantación de aplicaciones web.</title>
		<link href="https://reeseschultz.github.io/post/prueba:-introduccion-a-la-implantacion-de-aplicaciones-web./"/>
		<updated>2022-10-10T00:00:00Z</updated>
		<id>https://reeseschultz.github.io/post/prueba:-introduccion-a-la-implantacion-de-aplicaciones-web./</id>
		<content type="html">&lt;h1 id=&quot;alejandro-montes-delgado.&quot; tabindex=&quot;-1&quot;&gt;Alejandro Montes Delgado.&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;https://reeseschultz.github.io/img/ipasen.png&quot; alt=&quot;ipasen.png&quot; /&gt;&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Talleres unidad 1 Servicios.</title>
		<link href="https://reeseschultz.github.io/post/talleres-unidad-1-servicios./"/>
		<updated>2022-10-05T00:00:00Z</updated>
		<id>https://reeseschultz.github.io/post/talleres-unidad-1-servicios./</id>
		<content type="html">&lt;h1 id=&quot;taller-1%3A-ansible---playbook-sencillo&quot; tabindex=&quot;-1&quot;&gt;Taller 1: Ansible - Playbook sencillo&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;Entrega los ficheros: site.yaml, hosts y template/index.j2.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a href=&quot;https://reeseschultz.github.io/files/site.yaml&quot;&gt;site.yml&lt;/a&gt; &lt;a href=&quot;https://reeseschultz.github.io/files/host&quot;&gt;host&lt;/a&gt; &lt;a href=&quot;https://reeseschultz.github.io/files/index.j2&quot;&gt;index.j2&lt;/a&gt;&lt;/p&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;Entrega una captura de pantalla donde se vea que se ha finalizado la ejecución del playbook.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&quot;https://reeseschultz.github.io/img/SRI.png&quot; alt=&quot;SRI.png&quot; /&gt;&lt;/p&gt;
&lt;ol start=&quot;3&quot;&gt;
&lt;li&gt;Responde: ¿Cómo se llama la propiedad que permite que las tareas que ya se han realizado no se vuelvan a ejecutar?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Idempotencia&lt;/p&gt;
&lt;ol start=&quot;4&quot;&gt;
&lt;li&gt;Captura de pantalla, donde se vea el fichero foo.txt en el servidor configurado.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&quot;https://reeseschultz.github.io/img/SRI2.png&quot; alt=&quot;SRI2.png&quot; /&gt;&lt;/p&gt;
&lt;ol start=&quot;5&quot;&gt;
&lt;li&gt;Captura de pantalla donde se vea el acceso desde el navegador al servidor web, y se vea el contenido del fichero index.html.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&quot;https://reeseschultz.github.io/img/SRI3.png&quot; alt=&quot;SRI3.png&quot; /&gt;&lt;/p&gt;
&lt;ol start=&quot;6&quot;&gt;
&lt;li&gt;Entrega la URL de tu repositorio con el que estas trabajando.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/alemd01/taller_ansible_vagrant/&quot;&gt;Github&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;taller-2%3A-ansible---playbook-con-roles&quot; tabindex=&quot;-1&quot;&gt;Taller 2: Ansible - Playbook con roles&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;Entrega una captura de pantalla donde se vea que se ha finalizado la ejecución del playbook.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&quot;https://reeseschultz.github.io/img/SRI-T2.1.png&quot; alt=&quot;SRI-T2.1.png&quot; /&gt;&lt;/p&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;Captura de pantalla donde se vea el acceso desde el navegador al servidor web, y se vea el contenido del fichero index.html.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&quot;https://reeseschultz.github.io/img/SRI-T2.2.png&quot; alt=&quot;SRI-T2.2.png&quot; /&gt;&lt;/p&gt;
&lt;ol start=&quot;3&quot;&gt;
&lt;li&gt;Captura de pantalla donde se vea el acceso a la base de datos.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&quot;https://reeseschultz.github.io/img/SRI-T2.3.png&quot; alt=&quot;SRI-T2.3.png&quot; /&gt;&lt;/p&gt;
&lt;ol start=&quot;4&quot;&gt;
&lt;li&gt;Realiza un cambio en la receta que necesite ejecutar el reinicio del servicio. Ejecuta de nuevo el playbook y comprueba que se ha ejecutado el handler correspondiente.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&quot;https://reeseschultz.github.io/img/SRI-T2.4.png&quot; alt=&quot;SRI-T2.4.png&quot; /&gt;&lt;/p&gt;
&lt;ol start=&quot;5&quot;&gt;
&lt;li&gt;Entrega la URL de tu repositorio con el que estás trabajando.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/alemd01/taller_ansible_vagrant/&quot;&gt;Github&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;taller-3%3A-vagrant---creaci%C3%B3n-de-una-m%C3%A1quina-virtual&quot; tabindex=&quot;-1&quot;&gt;Taller 3: Vagrant - Creación de una máquina virtual&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;El fichero Vagrantfile con el que has trabajado.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Subido el &lt;a href=&quot;https://reeseschultz.github.io/files/Vagrantfile&quot;&gt;fichero&lt;/a&gt;&lt;/p&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;Una captura de pantalla donde se vea la instrucción de creación de la máquina y el acceso a la máquina virtual.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&quot;https://reeseschultz.github.io/img/SRI-T3.2.png&quot; alt=&quot;SRI-T3.2.png&quot; /&gt;&lt;/p&gt;
&lt;ol start=&quot;3&quot;&gt;
&lt;li&gt;Capturas de pantallas donde se vean la memoria RAM y las CPU asignadas.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&quot;https://reeseschultz.github.io/img/SRI-T3.3.png&quot; alt=&quot;SRI-T3.3.png&quot; /&gt;&lt;/p&gt;
&lt;ol start=&quot;4&quot;&gt;
&lt;li&gt;Captura de pantalla donde se vean la máquina KVM que se ha creado, la red que se ha creado y el volumen que está usando la máquina usa aprovisionamiento ligero.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&quot;https://reeseschultz.github.io/img/SRI-T3.4.png&quot; alt=&quot;SRI-T3.4.png&quot; /&gt;&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Creación de un sistema automatizado de instalación.</title>
		<link href="https://reeseschultz.github.io/post/creacion-de-un-sistema-automatizado-de-instalacion./"/>
		<updated>2022-10-05T00:00:00Z</updated>
		<id>https://reeseschultz.github.io/post/creacion-de-un-sistema-automatizado-de-instalacion./</id>
		<content type="html">&lt;p&gt;&lt;em&gt;Instalación automatizada basada en medio de almacenamiento extraíble.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Usaremos 7z para descomprimir la iso.&lt;/p&gt;
&lt;pre class=&quot;language-diff-js&quot;&gt;&lt;code class=&quot;language-diff-js&quot;&gt;&lt;span class=&quot;token coord&quot;&gt;7z x /mnt/Archivos/ISOs/debian-10.6.0-amd64-xfce-CD-1.iso&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;https://reeseschultz.github.io/img/ASO-P1.8.png&quot; alt=&quot;ASO-P1.8.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;descomprimimos el initrd. Damos permisos a la carpeta que vamos a modificar, ponemos el preseed en el initrd, volvemos a comprimir y ponemos los permisos de antes&lt;/p&gt;
&lt;pre class=&quot;language-diff-js&quot;&gt;&lt;code class=&quot;language-diff-js&quot;&gt;&lt;span class=&quot;token coord&quot;&gt;7z x initrd.gz&lt;/span&gt;&lt;br /&gt;chmod +w -R install.amd/&lt;br /&gt;echo preseed.cfg | cpio -H newc -o -A -F install.amd/initrd&lt;br /&gt;gzip install.amd/initrd&lt;br /&gt;chmod -w -R install.amd/&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Regeneramos el md5sum.txt&lt;/p&gt;
&lt;pre class=&quot;language-diff-js&quot;&gt;&lt;code class=&quot;language-diff-js&quot;&gt;chmod +w md5sum.txt&lt;br /&gt;find -follow -type f ! -name md5sum.txt -print0 | xargs -0 md5sum &gt; md5sum.txt&lt;br /&gt;chmod -w md5sum.txt&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Creamos una nueva iso booteable con el comando &lt;em&gt;genisoimage&lt;/em&gt;&lt;/p&gt;
&lt;pre class=&quot;language-diff-js&quot;&gt;&lt;code class=&quot;language-diff-js&quot;&gt;sudo genisoimage -r -J -b isolinux/isolinux.bin -c isolinux/boot.cat -no-emul-boot -boot-load-size 4 -boot-info-table -o ../debian-10.6.0-amd64-xfce-CD-1.iso &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ya tenemos la iso lista, ahora haremos una instalación desatendida. Ponemos el disco con la iso e iniciamos la máquina. Le damos a &lt;em&gt;Advanced options&lt;/em&gt;.
&lt;img src=&quot;https://reeseschultz.github.io/img/ASO-P1.9.png&quot; alt=&quot;imagen&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Ahora le damos a &lt;em&gt;Automated install&lt;/em&gt; y empezará la instalación
&lt;img src=&quot;https://reeseschultz.github.io/img/ASO-P1.10.png&quot; alt=&quot;imagen&quot; /&gt;&lt;/p&gt;
&lt;p&gt;ponemos contraseña de root y del usuario(me da problemas en el preseed y he decidido ponerla antes de la instalación).
&lt;img src=&quot;https://reeseschultz.github.io/img/ASO-P1.11.png&quot; alt=&quot;imagen&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Ahora empieza la instalación desatendida.
&lt;img src=&quot;https://reeseschultz.github.io/img/ASO-P1.12.png&quot; alt=&quot;imagen&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Aquí muestro la salida del comando &lt;em&gt;df -h&lt;/em&gt;
&lt;img src=&quot;https://reeseschultz.github.io/img/ASO-P1.14.png&quot; alt=&quot;imagen&quot; /&gt;&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Instalación de Debian 11 en el equipo de trabajo</title>
		<link href="https://reeseschultz.github.io/post/instalacion-de-debian-11-en-el-equipo-de-trabajo/"/>
		<updated>2022-10-05T00:00:00Z</updated>
		<id>https://reeseschultz.github.io/post/instalacion-de-debian-11-en-el-equipo-de-trabajo/</id>
		<content type="html">&lt;p&gt;He instalado en mi equipo de trabajo debian 11 con lvm, a continuación, explico de forma detallada como lo he instalado, configurado y los problemas e inconvenientes que me han surgido a lo largo de la instalación. En mi equipo tengo 2 discos duros, un HDD de 1 Tb de capacidad y un SSD de 240 Gb, al poner lvm en mi equipo lo he estructurado de la siguiente manera:&lt;/p&gt;
&lt;p&gt;El SSD esta particionado por la mitad, y una partición está reservada para windows la otra partición la he usado como volumen físico. En el caso del disco duro es exactamente igual está particionado en 2, 500gb cada partición, una de ellas está reservada para los archivos y la otra la he usado como otro volumen físico. He hecho 2 volúmenes de grupo, uno por disco, para que no interfiera en el rendimiento del ssd. En el ssd puse 2 volúmenes lógicos, uno la raíz con 30 Gb y el otro volumen lógico está el boot al que le di 1Gb.
En el HDD, tengo 2 particiones, una de ellas la he usado como volumen físico, he creado un grupo de volúmenes con este volumen físico y en el grupo de volúmenes he hecho 2 volúmenes lógicos, uno de 100Gb en el que he puesto la raiz y otro volumen lógico de 230Gb en el que he puesto el var.&lt;/p&gt;
&lt;p&gt;Una vez instalado el S.O he tenido los siguientes problemas con los drivers:
La tarjeta Wi-FI no me funcionaba, para solucionarlo hice el siguiente comando:&lt;/p&gt;
&lt;pre class=&quot;language-diff-js&quot;&gt;&lt;code class=&quot;language-diff-js&quot;&gt;sudo apt install firmware-atheros&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;por último usé este comando para instalar firmware de linux.&lt;/p&gt;
&lt;pre class=&quot;language-diff-js&quot;&gt;&lt;code class=&quot;language-diff-js&quot;&gt;sudo apt-get install firmware-linux firmware-linux-free firmware-linux-nonfree firmware-misc-nonfree&lt;/code&gt;&lt;/pre&gt;
</content>
	</entry>
	
	<entry>
		<title>Talleres unidad 1 Implantación Aplicaciones Web.</title>
		<link href="https://reeseschultz.github.io/post/talleres-unidad-1-implantacion-aplicaciones-web./"/>
		<updated>2022-10-05T00:00:00Z</updated>
		<id>https://reeseschultz.github.io/post/talleres-unidad-1-implantacion-aplicaciones-web./</id>
		<content type="html">&lt;p&gt;##TALLER 1: Introducción a git y GitHub&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Una captura de pantalla donde se vea que has creado el repositorio.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&quot;https://reeseschultz.github.io/img/TALLER1-IAW.png&quot; alt=&quot;TALLER1-IAW.png&quot; /&gt;&lt;/p&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;El contenido del fichero .git/config para que se vea que has clonado el repositorio con la URL ssh.&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&quot;language-diff-js&quot;&gt;&lt;code class=&quot;language-diff-js&quot;&gt;[core]&lt;br /&gt;	repositoryformatversion = 0&lt;br /&gt;	filemode = true&lt;br /&gt;	bare = false&lt;br /&gt;	logallrefupdates = true&lt;br /&gt;[remote &quot;origin&quot;]&lt;br /&gt;	url = git@github.com:alemd01/2ASIR.git&lt;br /&gt;	fetch = +refs/heads/*:refs/remotes/origin/*&lt;br /&gt;[branch &quot;main&quot;]&lt;br /&gt;	remote = origin&lt;br /&gt;	merge = refs/heads/main&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&quot;3&quot;&gt;
&lt;li&gt;La salida de la instrucción git log para ver los commits que has realizado (debe aparecer como autor tu nombre completo).&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&quot;language-diff-js&quot;&gt;&lt;code class=&quot;language-diff-js&quot;&gt;commit 421dec9a6988d91a1ac7c871ca9e4b042e803df7&lt;br /&gt;Author: alemd01 &amp;lt;aaleemd11@gmail.com&gt;&lt;br /&gt;Date:   Mon Sep 19 10:28:31 2022 +0200&lt;br /&gt;&lt;span class=&quot;token unchanged language-js&quot;&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt; He borrado el fichero prueba&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;txt&lt;br /&gt;&lt;/span&gt;&lt;br /&gt;commit d584d99ece167dedc0b8b649471c11a453652d2b&lt;br /&gt;Author: alemd01 &amp;lt;aaleemd11@gmail.com&gt;&lt;br /&gt;Date:   Mon Sep 19 10:27:57 2022 +0200&lt;br /&gt;&lt;span class=&quot;token unchanged language-js&quot;&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt; He cambiado el nombre al fichero&lt;br /&gt;&lt;/span&gt;&lt;br /&gt;commit 2793b586ee7a7d89184f7313ec4d92ced9f2c64a&lt;br /&gt;Author: alemd01 &amp;lt;aaleemd11@gmail.com&gt;&lt;br /&gt;Date:   Mon Sep 19 10:26:59 2022 +0200&lt;br /&gt;&lt;span class=&quot;token unchanged language-js&quot;&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt; He modificado el fichero prueba&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;txt&lt;br /&gt;&lt;/span&gt;&lt;br /&gt;commit e6195890e08484aa86eb1fc9c7c93d8448328c33&lt;br /&gt;Author: alemd01 &amp;lt;aaleemd11@gmail.com&gt;&lt;br /&gt;Date:   Mon Sep 19 10:17:13 2022 +0200&lt;br /&gt;&lt;span class=&quot;token unchanged language-js&quot;&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt; He creado el fichero prueba&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;txt&lt;br /&gt;&lt;/span&gt;&lt;br /&gt;commit 2093f3e2515054c1d7223d79b373c89526beebc4&lt;br /&gt;Author: alemd01 &amp;lt;78356101+alemd01@users.noreply.github.com&gt;&lt;br /&gt;Date:   Mon Sep 19 10:15:13 2022 +0200&lt;br /&gt;&lt;span class=&quot;token unchanged language-js&quot;&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt; Initial commit&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&quot;4&quot;&gt;
&lt;li&gt;buscar información para crear un nuevo repositorio llamado prueba2_tu_nombre. en esta ocasión, crea primero el repositorio local (usando git init) y luego busca información para sincronizarlo y crear el repositorio remoto en GitHub. Comenta los pasos que has realizado y manda alguna prueba de funcionamiento.
Primero hay que crear un repositorio en Github, después hay que crear un directorio en nuestra máquina local. Creamos por ejemplo el archivo README. Entramos en la carpeta y hacemos un git init.&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&quot;language-diff-js&quot;&gt;&lt;code class=&quot;language-diff-js&quot;&gt;&lt;span class=&quot;token unchanged language-js&quot;&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;    mkdir prueba2_AlejandroMontes&lt;br /&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;    cd prueba2_AlejandroMontes&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;&lt;br /&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token unchanged language-js&quot;&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;    echo &lt;span class=&quot;token string&quot;&gt;&quot;# prueba2_AlejandroMontes&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;README&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;md&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;https://reeseschultz.github.io/img/taller1-2.png&quot; alt=&quot;taller1-2.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Una vez hecho esto, hacemos un git add y un commit.&lt;/p&gt;
&lt;pre class=&quot;language-diff-js&quot;&gt;&lt;code class=&quot;language-diff-js&quot;&gt;&lt;span class=&quot;token unchanged language-js&quot;&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;    git add &lt;span class=&quot;token constant&quot;&gt;README&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;md&lt;br /&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token unchanged language-js&quot;&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;    git commit &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;m &lt;span class=&quot;token string&quot;&gt;&quot;primer commit&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;https://reeseschultz.github.io/img/taller1-3.png&quot; alt=&quot;taller1-3.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Ahora usamos este comando&lt;/p&gt;
&lt;pre class=&quot;language-diff-js&quot;&gt;&lt;code class=&quot;language-diff-js&quot;&gt;&lt;span class=&quot;token unchanged language-js&quot;&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;    git branch &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;M&lt;/span&gt; main&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;A continuación, tenemos que hacer un git remote add origin&lt;/p&gt;
&lt;pre class=&quot;language-diff-js&quot;&gt;&lt;code class=&quot;language-diff-js&quot;&gt;&lt;span class=&quot;token unchanged language-js&quot;&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;    git remote add origin git@github&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;com&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt;alemd01&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;prueba2_AlejandroMontes&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;git&lt;br /&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;por último hacemos un git push&lt;/p&gt;
&lt;pre class=&quot;language-diff-js&quot;&gt;&lt;code class=&quot;language-diff-js&quot;&gt;&lt;span class=&quot;token unchanged language-js&quot;&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;     git push &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;u origin main&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;https://reeseschultz.github.io/img/taller1-4.png&quot; alt=&quot;taller1-4.png&quot; /&gt;&lt;/p&gt;
</content>
	</entry>
</feed>